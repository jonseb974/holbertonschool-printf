 ss this page with 
.\" groff -man -tascii
.\"

.TH _PRINTF Manpage 3 "12 July 2022" "Holberton School #C18 Laval _printf Manuql" 

.SH NAME

_printf function \- formated output conversion.

.SH SYNOPSIS

#ifndef HEADER

#define HEADER

char* itoa(int n, int plus);

int printInt (int, char *);

int printString(char *, char *);

int _printf(const char *format, ...);

char checkOptions(char type, char *option);

void _putchar(char);

.B This is the #C18 Laval 2022-23, _PRINTF version.

.SH Description of _printf

_printf() is a functions similar to the regular function printf(),
and it takes 2 inputs arguments.

According to the case, when the program encounter the '%' symbol,
a specific output FORMAT is returned.

.PP
.B %s print an array of characters.

.PP
.B %c return the ASCII character corresponding to

the specific target, the function is calling.

.PP
.B %i return an integer number of the ASCII table,

this character correspond to a string handle conversion type.

.PP
.B %d return decimal number of the ASCII table,
corresponding to a string handle conversion type.

.SH OPTIONS 


.SH FILES
.TP 

.SH BUGS


.SH EXEMPLES

.B %c conversion example:

_printf("Character:[%c]\n", 'H');

printf("Character:[%c]\n", 'H');

return:

Character:[H]

Character:[H]


.B %s conversion example:

_printf("String:[%s]\n", "I am a string !");

printf("String:[%s]\n", "I am a string !");

return:

String:[I am a string !]

String:[I am a string !]


.B %i & %d conversion example:

_printf("Length:[%d, %i]\n", len, len);

printf("Length:[%d, %i]\n", len2, len2);

return:

Length:[39, 39]

Length:[39, 39]


.B error message example:

_printf("Unknown:[%r]\n");

printf("Unknown:[%r]\n");

return:

Unknown:[%r]

Unknown:[%r]



.SH "SEE ALSO"
 .B prinft (3) -- Linux manual page

 https://man7.org/linux/man-pages/man3/printf.3.html

.SH ""


.SH "AUTHOR"


.SH ""



Murdo Nickolai and Sebastien Jonad

